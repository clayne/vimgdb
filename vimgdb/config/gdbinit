# vim: set filetype=python

# allocate gdb convenience variables
python
variables = [ "$_vimgdb_option", "$_vimgdb_src" ]
for variable in variables:
    gdb.execute("set {0} = \"{1}\"".format(variable,"\\0"*256))
end

# vimgdb interface
define _vimgdb
if $argc >= 1
    set $_vimgdb_option = "$arg0"
else
    set $_vimgdb_option = ""
end

python

try:
    import sys
    import os

    sys.path.append(os.getcwd())
    from vimgdb import Vimgdb

    vimgdb = Vimgdb()
    vimgdb.Synchronize()

except ImportError:
    print("** vimgdb not found **")
    print("Python {0}.{1}.{2} could not find vimgdb in:".format(
            sys.version_info.major,
            sys.version_info.minor,
            sys.version_info.micro))
    for directory in sys.path:
        print("    {0}".format(directory))

    sys.exit(1)

end
end

alias sync = _vimgdb

define hookpost-break
    _vimgdb breakpoints
end

define hookpost-tbreak
    _vimgdb breakpoints
end

define hookpost-disable
    _vimgdb breakpoints
end

define hookpost-enable
    _vimgdb breakpoints
end

define hookpost-clear
    _vimgdb breakpoints
end

define hook-stop
    _vimgdb
end

define hookpost-up
    _vimgdb
end

define hookpost-down
    _vimgdb
end

