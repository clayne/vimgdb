# vim: set filetype=python:

define _vimgdb
if $argc >= 1
    set $_vimgdb_option = "$arg0"
else
    set $_vimgdb_option = "vimgdb init option"
end

python

# time function
def Timed(timed, function, *args, **kwargs):
    if timed:
        import timeit
        t = timeit.Timer(lambda: function(*args, **kwargs))
        try:
            print t.timeit(1)," Seconds"
        except:
            t.print_exc()
    else:
        function(*args, **kwargs)

from vimgdb import Vimgdb
import cProfile, pstats

profile = cProfile.Profile()
profile.enable()

vimgdb = Vimgdb()
vimgdb.Communicate()

profile.disable()
profile.create_stats()
stats = pstats.Stats(profile)
stats.sort_stats('time','cumulative')
stats.print_stats(10)
#stats.dump_stats("profile.pstats")
#
#profile.print_stats(sort='time')
#profile.dump_stats("profile2.pstats")
#Timed(True,vimgdb.Communicate)

end
end

alias vim = _vimgdb

define hookpost-break
    _vimgdb breakpoints
end

define hookpost-clear
    _vimgdb breakpoints
end

define hookpost-delete
    _vimgdb breakpoints
end

define hook-stop
    _vimgdb
end

define hookpost-up
    _vimgdb
end

define hookpost-down
    _vimgdb
end

