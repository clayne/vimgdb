# vim: set filetype=python:

define _vimgdb_python_version
python
import sys
print(sys.version_info.major)
end
end

define _vimgdb_communicate
python
from __future__ import print_function

def GetGdbVariable(variable):
    value = gdb.parse_and_eval("{0}".format(variable))
    value = dir.replace("\"","")
    return value

def GetCurrentLocation():
    try:
        current_line = gdb.decode_line()
        symbol_table_and_line = current_line[1][0]
        symbol_table = symbol_table_and_line.symtab
        source = symbol_table.fullname()
        line = symbol_table_and_line.line
        return source,line
    except:
        raise RuntimeError("Current line not detected")

def highlightInVim(line,source):
    from vimgdb import Vimgdb
    vim = Vimgdb()
    if vim.IsRunning():
        vim.Connect()
        vim.GotoLocation(source,line)
    else:
        raise RuntimeError("No connection to vim")

try:
    source,line = GetCurrentLocation()
    highlightInVim(line,source)
except Exception as e:
    print("Vimgdb Exception: {0}".format(str(e)))

end
end

define hook-stop
    _vimgdb_communicate
end

